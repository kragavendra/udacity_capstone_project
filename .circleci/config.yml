# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    parameters:
      # Added workflow ID for destroying the environment related files
      Workflow_ID:
        type: string
        default: ${CIRCLE_WORKFLOW_ID:0:7}
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name BlueVersion-<< parameters.Workflow_ID >>
            aws s3 rm s3://wordle-<<parameters.Workflow_ID>> --recursive
            aws cloudformation delete-stack --stack-name GreenVersion-<< parameters.Workflow_ID >>


jobs:
  build:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate 
            make lint

  create-blue-version:
    docker:
      - image: cimg/base:stable
    steps:
      # Checkout code from git
      - checkout
      - run:
          name: Update cloudfront distribution
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/cloudfront.yml \
              --parameter-overrides WorkflowID="${CIRCLE_WORKFLOW_ID:0:7}" \
              --stack-name BlueVersion-<< parameters.Workflow_ID >>
      # Here's where you will add some code to rollback on failure  
      - destroy-environment

  build-docker-image:
    working_directory: ~/apps
    docker:
      - image: docker:stable
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build and publish docker image
          command: |
            docker build -t wordle .
            echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker tag wordle kragavendra1100/wordle
            docker push kragavendra1100/wordle
      # Here's where you will add some code to rollback on failure  
      - destroy-environment

workflows:
  default:
    jobs:
      - build
      - create-blue-version:
          requires: [build]
      - build-docker-image:
          requires: [create-blue-version]
